#!/usr/bin/env ruby
#
# h2. imw/bin/reverse_domains -- reverses the domains of directories to match our standard ordering
#
#
# == About
#
# Author::    (Philip flip Kromer, Dhruv Bansal) for Infinite Monkeywrench Project (mailto:coders@infochimps.org)
# Copyright:: Copyright (c) 2008 infochimps.org
# License::   GPL 3.0
# Website::   http://infinitemonkeywrench.org/
# 

require 'imw/rip'

Usage = "

USAGE: reverse_domains [OPTIONS] dir1 dir2 ...

This is a Ruby script to reverse the names of all directories
contained within the given directories and strip any leading
prefixes like 'www'.

Possible options are:

    -v,--verbose
         Show directories being renamed and files that are
         being ignored.

    -t,--test
         Print output of what would be done without renaming
         anything.

    -h,--help
         Print this usage manual.

"

ShortOptions = ['v','t','h']
LongOptions = ['verbose','test','help']

# Default option values
verbose = false
test = false
Directories = []

# Process the command line arguments
if ARGV.size == 0 then puts Usage ; exit() end

ARGV.each do |arg|
  if arg[0,1] == '-' and arg[0,2] != '--' then # short form options
    options_string = arg[1...arg.size]
    options = options_string.split('')
    options.each do |option| 
      if not ShortOptions.member?(option) then puts "Invalid option: -#{option}"; exit() end
      if option == 'v' then verbose = true
      elsif option == 't' then test = true
      elsif option == 'h' then puts Usage ; exit()
      end
    end
  elsif arg[0,2] == '--' then # long form options
    option = arg[2...arg.size]
    if not LongOptions.member?(option) then puts "Invalid option: --#{option}"; exit()
    else
      if option == 'verbose' then verbose = true
      elsif option == 'test' then test = true
      elsif option == 'help' then puts Usage ; exit()
      end
    end
  else
    Directories << arg
  end
end

if Directories.size == 0 then puts "No directories Specified!  Try 'reverse_domains --help'" ; exit() end

Directories.each do |directory|
  if verbose then puts "Reversing domain-named directories in #{directory}" end
  Dir.entries(directory).each do |dir|
    if FileTest.directory?(directory + '/' + dir) then
      old_dir = directory + '/' + dir
      new_dir = directory + '/' + reverse_domain(dir)
      if verbose or test then puts "#{old_dir} ==> #{new_dir}" end
      if not test then File.rename(old_dir,new_dir) end
    else
      if verbose or test then puts "(#{directory}/#{dir})" end
    end
  end
end

# puts "#{File.basename(__FILE__)}: You feel suddenly dizzy and lean for a minute on your Monkeywrench." # at bottom
